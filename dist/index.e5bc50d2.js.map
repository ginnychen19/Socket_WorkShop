{"mappings":"AAAA,EAAE;IACE,8BAA8B,GAC9B,IAAI,SAAS,GAAG;IAChB,IAAI,SAAS;IAEb,QAAQ,GACR,iBAAiB;IACjB,EAAE,cAAc,KAAK,CAAC;QAClB,SAAS,EAAE,IAAI,CAAC,EAAE,cAAc,GAAG,KAAK,gBAAgB;QACxD,IAAI,QACA,MAAM,GACN,iBAAiB;QACjB,OAAO,IAAI,CAAC,SAAS;YAAE,UAAU;QAAO;aAExC,MAAM;IAEd;IACA,gCAAgC;IAChC,OAAO,EAAE,CAAC,gBAAgB,SAAU,IAAI;QACpC,IAAI,KAAK,QAAQ,KAAK,QAClB,QAAQ,MAAM,sBAAsB;;aAEpC,MAAM;IAEd;IACA,6BAA6B;IAC7B,OAAO,EAAE,CAAC,aAAa;QACnB,MAAM;IACV;IACA,mBAAmB;IACnB,OAAO,EAAE,CAAC,OAAO,SAAU,IAAI;QAC3B,IAAI,OAAO,CAAC,GAAG,EAAE,KAAK,QAAQ,CAAC,6CAAU,CAAC;QAC1C,EAAE,aAAa,MAAM,CAAC;QACtB,SAAS,cAAc,CAAC,cAAc,SAAS,GAAG,CAAC,kCAAM,EAAE,KAAK,SAAS,CAAC,CAAC;IAC/E;IACA,kBAAkB;IAClB,SAAS,QAAQ,IAAI;QACjB,EAAE,eAAe,IAAI,CAAC;QACtB,EAAE,cAAc,IAAI,CAAC;IACzB;IAEA,SAAS,GACT,qBAAqB;IACrB,EAAE,aAAa,KAAK,CAAC;QACjB,wEAAwE;QACxE,IAAI,QAAQ,QAAQ;QACpB,IAAI,OACA,cAAc,GACd,iCAAiC;QACjC,OAAO,IAAI,CAAC,UAAU;YAAE,UAAU;QAAO;IAEjD;IAEA,kCAAkC;IAClC,OAAO,EAAE,CAAC,gBAAgB;QACtB;IACJ;IAEA,SAAS;QACL,EAAE,eAAe,IAAI,CAAC;QACtB,EAAE,cAAc,IAAI,CAAC;IACzB;IAEA,kCAAkC;IAClC,OAAO,EAAE,CAAC,SAAS,SAAU,IAAI;QAC7B,IAAI,KAAK,QAAQ,IAAI,MAAM;YACvB,IAAI,OAAO,CAAC,GAAG,EAAE,KAAK,QAAQ,CAAC,6CAAU,CAAC;YAC1C,EAAE,aAAa,MAAM,CAAC;YACtB,SAAS,cAAc,CAAC,cAAc,SAAS,GAAG,CAAC,kCAAM,EAAE,KAAK,SAAS,CAAC,CAAC;QAC/E;IACJ;IAGA,YAAY,GACZ,gBAAgB;IAChB,EAAE,YAAY,KAAK,CAAC;QAChB;IACJ;IACA,gBAAgB;IAChB,EAAE,UAAU,OAAO,CAAC,SAAU,GAAG;QAC7B,IAAI,IAAI,OAAO,IAAI,IACf;IAER;IAEA,gBAAgB;IAChB,SAAS;QACL,IAAI,MAAM,EAAE,YAAY,GAAG;QAC3B,EAAE,YAAY,GAAG,CAAC;QAClB,IAAI,KACA,mBAAmB,GACnB,OAAO,IAAI,CAAC,eAAe;YAAE,UAAU;YAAQ,SAAS;QAAI;IAEpE;IAEA,qCAAqC;IACrC,OAAO,EAAE,CAAC,kBAAkB,SAAS,IAAI;QACrC,YAAY;IAChB;IAEA,MAAM,GACN,SAAS,YAAY,IAAI;QACrB,IAAI;QACJ,IAAG,KAAK,QAAQ,KAAK,QACjB,OAAO,CAAC;;iDAE6B,EAAE,KAAK,OAAO,CAAC;0BACtC,CAAC;aAEf,OAAO,CAAC;gDAC4B,EAAE,KAAK,QAAQ,CAAC;iDACf,EAAE,KAAK,OAAO,CAAC;0BACtC,CAAC;QAEnB,EAAE,aAAa,MAAM,CAAC;IAC1B;AAEJ","sources":["week01/main.js"],"sourcesContent":["$(function () {\r\n    /*01.建立socket連接，連向server監聽的端口號*/\r\n    var socket = io('ws://localhost:8080');\r\n    var myName = null;\r\n\r\n    /*A.登入事件*/\r\n    // A-1.取得使用者輸入的姓名\r\n    $('.login-btn').click(function () {\r\n        myName = $.trim($('#loginName').val()); //$.trim => 去除空格\r\n        if (myName) {\r\n            /*發送事件*/\r\n            //.emit => 用於發送事件\r\n            socket.emit('login', { username: myName })\r\n        } else {\r\n            alert('Please enter a name:)')\r\n        }\r\n    })\r\n    // A-2.socket登入成功 - loginSuccess\r\n    socket.on('loginSuccess', function (data) {\r\n        if (data.username === myName) {\r\n            checkIn(data) //隱藏登入頁，顯示聊天頁，並把data傳入\r\n        } else {\r\n            alert('Wrong username:( Please try again!')\r\n        }\r\n    })\r\n    // A-3.socket登入失敗 - loginFail\r\n    socket.on('loginFail', function () {\r\n        alert('Duplicate name already exists:0')\r\n    })\r\n    // A-4. 使用者加入聊天室的提示\r\n    socket.on('add', function (data) {\r\n        var html = `<p>${data.username} 加入聊天室</p>`\r\n        $('.chat-con').append(html);\r\n        document.getElementById('chat-title').innerHTML = `在線人數: ${data.userCount}`\r\n    })\r\n    // A-5.隱藏登入頁，顯示聊天頁\r\n    function checkIn(data) {\r\n        $('.login-wrap').hide('slow');\r\n        $('.chat-wrap').show('slow');\r\n    }\r\n\r\n    /*B.退出事件 */\r\n    // b-1.點擊退出時確認是否真的要退出\r\n    $('.leaveBtn').click(function () {\r\n        // confirm - https://www.fooish.com/javascript/alert-confirm-prompt.html\r\n        let leave = confirm('你確定要退出嗎?');\r\n        if (leave) {\r\n            /*觸發 logout 事件*/\r\n            // logout 事件會觸發leaveSuccess和leave\r\n            socket.emit('logout', { username: myName });\r\n        }\r\n    })\r\n\r\n    // b-2.離開成功 (在socket 觸發logout時被調用)\r\n    socket.on('leaveSuccess', function () {\r\n        checkOut();\r\n    })\r\n\r\n    function checkOut() {\r\n        $(\".login-wrap\").show('slow');\r\n        $(\".chat-wrap\").hide(\"slow\");\r\n    }\r\n\r\n    // b-3.退出提示 (在socket 觸發logout時被調用)\r\n    socket.on('leave', function (data) {\r\n        if (data.username != null) {\r\n            let html = `<p>${data.username} 退出聊天室</p>`;\r\n            $('.chat-con').append(html);\r\n            document.getElementById('chat-title').innerHTML = `在線人數: ${data.userCount}`;\r\n        }\r\n    })\r\n\r\n\r\n    /* C.發送訊息交流 */\r\n    // C-01.按下send按鈕\r\n    $('.sendBtn').click(function () {\r\n        sendMessage()\r\n    });\r\n    // C-01.按下Enter \r\n    $(document).keydown(function (evt) {\r\n        if (evt.keyCode == 13) {\r\n            sendMessage()\r\n        }\r\n    })\r\n\r\n    //C-02.客戶端主動發送訊息\r\n    function sendMessage() {\r\n        let txt = $('#sendtxt').val();\r\n        $('#sendtxt').val('');\r\n        if (txt) {\r\n            /*觸發 sendMessage 事件*/\r\n            socket.emit('sendMessage', { username: myName, message: txt });\r\n        }\r\n    }\r\n\r\n    //C-03.客戶端主動發訊息後會在伺服器觸發receiveMessage\r\n    socket.on('receiveMessage', function(data){\r\n        showMessage(data)\r\n    })\r\n    \r\n    /*顯示訊息*/\r\n    function showMessage(data){\r\n        var html;\r\n        if(data.username === myName){\r\n            html = `<div class=\"chat-item item-right clearfix\">\r\n                        <span class=\"abs uname\">me</span>\r\n                        <span class=\"message fr\">${data.message}</span>\r\n                    </div>`\r\n        }else{\r\n            html = `<div class=\"chat-item item-left clearfix rela\">\r\n                        <span class=\"abs uname\">${data.username}</span>\r\n                        <span class=\"fl message\">${data.message}</span>\r\n                    </div>`\r\n        }\r\n        $('.chat-con').append(html);\r\n    }\r\n\r\n})"],"names":[],"version":3,"file":"index.e5bc50d2.js.map","sourceRoot":"/__parcel_source_root/"}